version: '3'
services:
  config-server:
    build:
      context: ./config_server
      dockerfile: Dockerfile
    container_name: rb-config-server
    ports:
      - "4000:4000"
#      volumes:
#        - "/tao-elszamolas/logs:/var/log/tao-elszamolas"
    networks:
      - rbnetwork

  service-discovery:
    build:
      context: ./service_discovery
      dockerfile: Dockerfile
    container_name: rb-service-discovery
    environment:
      CONFIG_SERVER_HOST: rb-config-server
      CONFIG_SERVER_PORT: 4000
    depends_on:
      - config-server
    restart: unless-stopped
    ports:
      - "8761:8761"
#      volumes:
#        - "/tao-elszamolas/logs:/var/log/tao-elszamolas"
    networks:
      - rbnetwork

  authorization-server-database:
    image: postgres
    restart: always
    env_file:
      - database.env # configure postgres

  authorization-server:
    build:
      context: ./authorization_server
      dockerfile: Dockerfile
    container_name: rb-authorization-server
    environment:
      CONFIG_SERVER_HOST: rb-config-server
      CONFIG_SERVER_PORT: 4000
    depends_on:
      - config-server
      - service-discovery
    restart: unless-stopped
    ports:
      - "8090:8090"

networks:
  rbnetwork:
    driver: bridge